initSidebarItems({"struct":[["BlurEvent","The `BlurEvent` is fired when an element has lost focus. The main difference between this event and focusout is that only the latter bubbles."],["ClickEvent","The `ClickEvent` is fired when a pointing device button (usually a mouse's primary button) is pressed and released on a single element."],["ContextMenuEvent","The `ContextMenuEvent` event is fired when the right button of the mouse is clicked (before the context menu is displayed), or when the context menu key is pressed."],["DoubleClickEvent","The `DoubleClickEvent` is fired when a pointing device button (usually a mouse's primary button) is clicked twice on a single element."],["DragDropEvent","The drop event is fired when an element or text selection is dropped on a valid drop target."],["DragEndEvent","The dragend event is fired when a drag operation is being ended (by releasing a mouse button or hitting the escape key)."],["DragEnterEvent","The dragenter event is fired when a dragged element or text selection enters a valid drop target."],["DragEvent","The drag event is fired every few hundred milliseconds as an element or text selection is being dragged by the user."],["DragExitEvent","The dragexit event is fired when an element is no longer the drag operation's immediate selection target."],["DragLeaveEvent","The dragleave event is fired when a dragged element or text selection leaves a valid drop target."],["DragOverEvent","The dragover event is fired when an element or text selection is being dragged over a valid drop target (every few hundred milliseconds)."],["DragStartEvent","The dragstart event is fired when the user starts dragging an element or text selection."],["FocusEvent","The `FocusEvent` is fired when an element has received focus. The main difference between this event and focusin is that only the latter bubbles."],["GotPointerCaptureEvent","The `GotPointerCaptureEvent` fires when an element receives pointer capture"],["KeyDownEvent","The `KeyDownEvent` is fired when a key is pressed down. Unlike the `KeyPressEvent` event it's also fired for keys which do not produce a character value."],["KeyPressEvent","The `KeyPressEvent` is fired when a key is pressed down. It's only fired for keys which produce a character value."],["KeyUpEvent","The `KeyUpEvent` is fired when a key is released."],["LostPointerCaptureEvent","The `LostPointerCaptureEvent` fires when an element loses pointer capture"],["MouseDownEvent","The `MouseDownEvent` is fired when a pointing device button is pressed on an element."],["MouseEnterEvent","The `MouseEnterEvent` is fired when a pointing device (usually a mouse) is moved over the element that has the listener attached."],["MouseLeaveEvent","The `MouseLeaveEvent` is fired when a pointing device (usually a mouse) is moved out of an element that has the listener attached to it."],["MouseMoveEvent","The `MouseMoveEvent` is fired when a pointing device (usually a mouse) is moved while over an element."],["MouseOutEvent","The `MouseOutEvent` is fired when a pointing device (usually a mouse) is moved off the element that has the listener attached or off one of its children."],["MouseOverEvent","The `MouseOverEvent` is fired when a pointing device (usually a mouse) is moved onto the element that has the listener attached or onto one of its children."],["MouseUpEvent","The `MouseUpEvent` is fired when a pointing device button is released over an element."],["MouseWheelEvent","The `MouseWheelEvent` is fired when a pointing device's wheel button (usually a mousewheel) is rotated over the element that has the listener attached."],["PointerCancelEvent","The `PointerCancelEvent` is fired when a pointer will no longer produce events (for example the device is deactivated), or if the pointer starts a gesture after a pointerdown event (for example panning, zooming, or drag and drop)"],["PointerDownEvent","The `PointerDownEvent` is fired when a pointer becomes active"],["PointerEnterEvent","The `PointerEnterEvent` is fired when a pointing device is moved into the hit test boundaries of an element or its descendants. This event does not bubble."],["PointerLeaveEvent","The `PointerLeaveEvent` is fired when the pointer moves out of the hit test boundaries of an element and it's descendants. This can include when a finger leaves a touch screen or a pen leaves the detectable hover range. This event does not bubble."],["PointerMoveEvent","The `PointerMoveEvent` is fired when a pointer changes coordinates"],["PointerOutEvent","The `PointerOutEvent` is fired when the pointer moves out of the hit test boundaries of an element. This can include when a finger leaves a touch screen or a pen leaves the detectable hover range."],["PointerOverEvent","The `PointerOverEvent` is fired when a pointing device is moved into a element's hit test boundaries."],["PointerUpEvent","The `PointerUpEvent` is fired when a pointer is no longer active"],["ScrollEvent","The scroll event is fired when the document view or an element has been scrolled."],["SubmitEvent","The submit event is fired when a form is submitted."]],"trait":[["IKeyboardEvent","`IKeyboardEvent` objects describe a user interaction with the keyboard. Each event describes a key; the event type identifies what kind of activity was performed."],["IMouseEvent","The `IMouseEvent` interface represents events that occur due to the user interacting with a pointing device (such as a mouse)."],["IPointerEvent","The `IPointerEvent` interface represents the state of a DOM event produced by a pointer such as the geometry of the contact point, the device type that generated the event, the amount of pressure that was applied on the contact surface, etc."]]});